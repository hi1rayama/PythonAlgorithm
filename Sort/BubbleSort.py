'''
バブルソート
1. i = 0~N - 2 について，2 ~ 4 を繰り返す.
2. jをN - 1とする.
3. INPUT_VALUE [j - 1] と INPUT_VALUE[j] を比較し，INPUT_VALUE[j] のほうが小さければ，INPUT_VALUE[j - 1] と INPUT_VALUE[j] を交換する. 
4. jを1減らす.減らした j に対して j > i であれば，3.に戻る.

平均計算量：O(n^2)
最悪計算量：O(n^2)
内部ソート：○
安定ソート：○

'''

def bubbleSort(N,INPUT_VALUE):
    print("ソート前：",INPUT_VALUE)
    try:
        for i in range(0,N-2):
            for j in range(N-1,i,-1):
                if(INPUT_VALUE[j-1]>INPUT_VALUE[j]):
                    INPUT_VALUE[j-1],INPUT_VALUE[j]=INPUT_VALUE[j],INPUT_VALUE[j-1]
                    print("i:",i,"j:",j,INPUT_VALUE)
        print("ソート後：",INPUT_VALUE)
                    

    except:
        print("ERROR!!")

    



N=int(input())
INPUT = list(map(int, input().split())) #入力
bubbleSort(N,INPUT)

'''''''''''''''''''''''''''''''''
            結果
$ python3 BubbleSort.py 
10
6 9 12 7 15 23 2 10 4 20
ソート前： [6, 9, 12, 7, 15, 23, 2, 10, 4, 20]
i: 0 j: 8 [6, 9, 12, 7, 15, 23, 2, 4, 10, 20]
i: 0 j: 6 [6, 9, 12, 7, 15, 2, 23, 4, 10, 20]
i: 0 j: 5 [6, 9, 12, 7, 2, 15, 23, 4, 10, 20]
i: 0 j: 4 [6, 9, 12, 2, 7, 15, 23, 4, 10, 20]
i: 0 j: 3 [6, 9, 2, 12, 7, 15, 23, 4, 10, 20]
i: 0 j: 2 [6, 2, 9, 12, 7, 15, 23, 4, 10, 20]
i: 0 j: 1 [2, 6, 9, 12, 7, 15, 23, 4, 10, 20]
i: 1 j: 7 [2, 6, 9, 12, 7, 15, 4, 23, 10, 20]
i: 1 j: 6 [2, 6, 9, 12, 7, 4, 15, 23, 10, 20]
i: 1 j: 5 [2, 6, 9, 12, 4, 7, 15, 23, 10, 20]
i: 1 j: 4 [2, 6, 9, 4, 12, 7, 15, 23, 10, 20]
i: 1 j: 3 [2, 6, 4, 9, 12, 7, 15, 23, 10, 20]
i: 1 j: 2 [2, 4, 6, 9, 12, 7, 15, 23, 10, 20]
i: 2 j: 8 [2, 4, 6, 9, 12, 7, 15, 10, 23, 20]
i: 2 j: 7 [2, 4, 6, 9, 12, 7, 10, 15, 23, 20]
i: 2 j: 5 [2, 4, 6, 9, 7, 12, 10, 15, 23, 20]
i: 2 j: 4 [2, 4, 6, 7, 9, 12, 10, 15, 23, 20]
i: 3 j: 9 [2, 4, 6, 7, 9, 12, 10, 15, 20, 23]
i: 3 j: 6 [2, 4, 6, 7, 9, 10, 12, 15, 20, 23]
ソート後： [2, 4, 6, 7, 9, 10, 12, 15, 20, 23]
'''''''''''''''''''''''''''''''''